
script.
  /**
    * -------------------------------
    * SKUの処理
    */
  $(function () {
    /**
      * @type {Number} - 通貨レート
      */
    var curRatio = 0.067;

    /**
      * @type {Number} - 選択可能な最大数量
      */
    var quantityMax = 10;

    /**
      * @type {Object} - 価格を表示している要素のjQueryオブジェクトをまとめたもの
      */
    var $displayPrice = {
      price: $('.js-lc--price'),
      basePrice: $('.js-lc--basePrice')
    }

    /**
      * @type {Object} - SKU、quantity、product_sku_idの要素のjQueryオブジェクトをまとめたもの
      */
    var $form = {
      sku1: $('.js-lc--sku1'),
      sku2: $('.js-lc--sku2'),
      quantity: $('[name="quantity"]'),
      product_sku_id: $('input[name="product_sku_id"]'),
      cartin: $('.js-lc--cartin')
    }

    /**
      * @type {Boolean} - この商品におけるSKU1、SKU2の存在
      */
    var hasSku1 = $form.sku1.length ? true : false;
    var hasSku2 = $form.sku2.length ? true : false;

    if (hasSku1 || hasSku2) {
      // SKUが変更されたときとページが表示されたタイミングで情報を更新
      $form.sku1.on('click', updateSkuState);
      $form.sku2.on('click', updateSkuState);
      window.addEventListener('pageshow', function() {
        updateSkuState();
      });

      /**
        * 選択されている SKU の組み合わせから価格や SKU の disabled を更新
        */
      function updateSkuState () {
        var selectedSku = {};
        if (hasSku1 && hasSku2) {
          var sku1Value = $form.sku1.filter(':checked').val();
          var sku2Value = $form.sku2.filter(':checked').val();
          for (var i = 0; i < productSkus.length; i++) {
            if (productSkus[i].sku1 === sku1Value && productSkus[i].sku2 === sku2Value) {
              selectedSku = productSkus[i];
            }
            if (productSkus[i].sku1 === sku1Value || productSkus[i].sku2 === sku2Value) {
              if (!productSkus[i].stock) {
                $form.sku1.filter('[value="' + productSkus[i].sku1 + '"]').not(':checked').prop('disabled', true);
                $form.sku2.filter('[value="' + productSkus[i].sku2 + '"]').not(':checked').prop('disabled', true);
              } else {
                $form.sku1.filter('[value="' + productSkus[i].sku1 + '"]').not(':checked').prop('disabled', false);
                $form.sku2.filter('[value="' + productSkus[i].sku2 + '"]').not(':checked').prop('disabled', false);
              }
            }
          }
        } else if (hasSku1 || hasSku2) {
          var skuValue = hasSku1 ? $form.sku1.filter(':checked').val() : $form.sku2.filter(':checked').val();
          if (!skuValue) {
            skuValue = false;
          }
          for (var i = 0; i < productSkus.length; i++) {
            if (productSkus[i].sku1 === skuValue || productSkus[i].sku2 === skuValue) {
              selectedSku = productSkus[i];
            } else {
              if (!productSkus[i].stock) {
                $form.sku1.filter('[value="' + productSkus[i].sku1 + '"]').prop('disabled', true);
                $form.sku2.filter('[value="' + productSkus[i].sku2 + '"]').prop('disabled', true);
              } else {
                $form.sku1.filter('[value="' + productSkus[i].sku1 + '"]').prop('disabled', false);
                $form.sku2.filter('[value="' + productSkus[i].sku2 + '"]').prop('disabled', false);
              }
            }
          }
        }

        $form.product_sku_id.val(selectedSku.id);

        if ((hasSku1 && $form.sku1.filter(':checked').length === 0) || (hasSku2 && $form.sku2.filter(':checked').length === 0)) {
          $form.cartin.addClass('is-disabled');
          $displayPrice.price.text(price_format(curRatio * productSkus[0].basePrice));
          $displayPrice.basePrice.text(number_format(productSkus[0].basePrice));
          $form.quantity.find('option')
            .show()
            .prop('disabled', false);
        } else {
          $form.cartin.removeClass('is-disabled');
          $displayPrice.price.text(price_format(curRatio * selectedSku.basePrice));
          $displayPrice.basePrice.text(number_format(selectedSku.basePrice));
          $form.quantity.find('option')
            .show()
            .prop('disabled', false);
          $form.quantity.find('option:gt(' + (selectedSku.stock - 1) + ')')
            .hide()
            .prop('disabled', true)
            .prop('selected', false);
        }
      }

      // SKUが選択されていないときにカートインボタンが押されたらアラートを返す
      $form.cartin.on('click', function () {
        if ($(this).hasClass('is-disabled')) {
          var message = '请选择 %SKU%';
          if (hasSku1 && hasSku2) {
            message = message.replace('%SKU%', '"' + skuLabels.sku1 + '", "' + skuLabels.sku2 + '"');
          } else {
            message = message.replace('%SKU%', '"' + (hasSku1 ? skuLabels.sku1 : skuLabels.sku2) + '"');
          }
          alert(message);
          return false;
        }
      });
    }
  });

  /**
    * 数値を小数点固定の価格表記へ変換
    * @param {Number} num - 変換したい数値
    */
  function price_format(num) {
    return number_format(parseFloat(num).toFixed(2));
  }

  /**
    * 数値をカンマつきの数値表記へ変換
    * @param {Number} num - 変換したい数値
    */
  function number_format (num) {
    var parts = num.toString().split('.');
    parts[0] = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,');
    return parts.join('.');
  }